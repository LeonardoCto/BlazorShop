@page "/ProductDetails/{Id:int}"

@if(Product is null && ErrorMessage is null)
{
   <ShowSpinner/>
}
else if(ErrorMessage is not null )
{
    <ShowError ErrorMessage="@ErrorMessage"></ShowError>
}

else
{
    <h3 class="mb-5">Product Detail</h3>
    <div class="row">
        <div class="col-md-6 mb-4">
            <img class="img-fluid" src="@Product.ImageUrl">
        </div>
        <div class="col-md-6">
            <h3>@Product.Name</h3>
            <p class="mb-4">@Product.Description</p>
            <p class="mb-4">
                <b>
                   R$@Product.Price.ToString()&nbsp;(@Product.Quantity itens in stock)
                </b>
            </p>
            <div>
                <button class="btn btn-success">
                   Add to Cart
                </button>
            </div>
        </div>
    </div>
}

@code
{
    [Inject]
    public IProductService? ProductService {get; set;}

    [Parameter]
    public int Id {get; set;}

    public ProductDto? Product {get; set;}

    public string? ErrorMessage {get; set;}

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Product = await ProductService.GetGetProductById(Id);

        }
        catch(Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}